<clickhouse replace="true">
    <logger>
        <level>information</level>
        <log>/var/log/clickhouse-server/clickhouse-server.log</log>
        <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
        <size>1000M</size>
        <count>3</count>
    </logger>
    <display_name>MYNODE</display_name>
    <listen_host>0.0.0.0</listen_host>
    <http_port>8123</http_port>
    <tcp_port>9000</tcp_port>
    <user_directories>
        <users_xml>
            <path>users.xml</path>
        </users_xml>
        <local_directory>
            <path>/var/lib/clickhouse/access/</path>
        </local_directory>
    </user_directories>
    <distributed_ddl>
        <path>/clickhouse/task_queue/ddl</path>
    </distributed_ddl>
    <remote_servers>
        <mycluster>
            <shard>
                <internal_replication>true</internal_replication>
                <replica>
                    <host>NODE1HOST</host>
                    <port>9000</port>
                </replica>
                <replica>
                    <host>NODE2HOST</host>
                    <port>9000</port>
                </replica>
                <replica>
                    <host>NODE3HOST</host>
                    <port>9000</port>
                </replica>
            </shard>
        </mycluster>
    </remote_servers>
    <zookeeper>
        <node>
            <host>NODE1HOST</host>
            <port>9181</port>
        </node>
        <node>
            <host>NODE2HOST</host>
            <port>9181</port>
        </node>
        <node>
            <host>NODE3HOST</host>
            <port>9181</port>
        </node>
    </zookeeper>
    <macros>
        <shard>01</shard>
        <replica>MYNODE</replica>
        <cluster>mycluster</cluster>
    </macros>

    <prometheus>
        <endpoint>/metrics</endpoint>
        <port>9363</port>
        <metrics>true</metrics>
        <events>true</events>
        <asynchronous_metrics>true</asynchronous_metrics>
        <errors>true</errors>
    </prometheus>

    <!-- https://kb.altinity.com/altinity-kb-setup-and-maintenance/ch-logs-2-json-vectordev/ -->
    <logger>
        <!-- Structured log formatting:
        You can specify log format(for now, JSON only). In that case, the console log will be printed
        in specified format like JSON.
        For example, as below:
        {"date_time":"1650918987.180175","thread_name":"#1","thread_id":"254545","level":"Trace","query_id":"","logger_name":"BaseDaemon","message":"Received signal 2","source_file":"../base/daemon/BaseDaemon.cpp; virtual void SignalListener::run()","source_line":"192"}
        To enable JSON logging support, just uncomment <formatting> tag below.
        -->
        <formatting>json</formatting>
    </logger>

    <keeper_server>
        <tcp_port>9181</tcp_port>
        <server_id>MYNODEID</server_id>
        <log_storage_path>/var/lib/clickhouse/coordination/log</log_storage_path>
        <snapshot_storage_path>/var/lib/clickhouse/coordination/snapshots</snapshot_storage_path>
        <coordination_settings>
            <operation_timeout_ms>10000</operation_timeout_ms>
            <session_timeout_ms>30000</session_timeout_ms>
            <raft_logs_level>information</raft_logs_level>
        </coordination_settings>
        <raft_configuration>
            <server>
                <id>1</id>
                <hostname>NODE1HOST</hostname>
                <port>9234</port>
            </server>
            <server>
                <id>2</id>
                <hostname>NODE2HOST</hostname>
                <port>9234</port>
            </server>
            <server>
                <id>3</id>
                <hostname>NODE3HOST</hostname>
                <port>9234</port>
            </server>
        </raft_configuration>
    </keeper_server>
</clickhouse>
